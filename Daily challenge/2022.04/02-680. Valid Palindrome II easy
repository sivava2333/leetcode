# 1. 原题链接
[680. Valid Palindrome II](https://leetcode.com/problems/valid-palindrome-ii/)

# 2. 思路
+ 双指针
根据回文字符串的定义，双指针从两边开始向中间遍历，遇到第一个不相等的位置，分别尝试只移动左指针和只移动右指针，如果又出现不相等的情况，则返回false

# 3. 代码
```
class Solution {
    private boolean checkPalindrome(String s, int i, int j) {
        while (i < j) {
            if (s.charAt(i) != s.charAt(j)) {
                return false;
            }
            
            i++;
            j--;
        }
        
        return true;
    }
    
    public boolean validPalindrome(String s) {
        int i = 0;
        int j = s.length() - 1;
        
        while (i < j) {
            // Found a mismatched pair - try both deletions
            if (s.charAt(i) != s.charAt(j)) {
                return (checkPalindrome(s, i, j - 1) || checkPalindrome(s, i + 1, j));
            }
            
            i++;
            j--;
        }
        
        return true;
    }
}
```
